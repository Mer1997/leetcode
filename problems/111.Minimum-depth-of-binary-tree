/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
const static auto io_sync_off = [](){std::ios::sync_with_stdio(false); std::cin.tie(nullptr); std::cout.tie(nullptr); return nullptr;}();
class Solution {
public:
    int getmin(TreeNode *root, int level){
        if(root == nullptr) return level;
        
        
        if(root->left == nullptr && root->right == nullptr) return level+1;
            if(root->left != nullptr && root->right != nullptr){
            int left = getmin(root->left, level+1);
            int right = getmin(root->right, level+1);
            if(left > right) return right;
            else return left;
        }else if(root->left != nullptr){
            return getmin(root->left, level+1);        
        }else return getmin(root->right, level+1);
        
    }
    int minDepth(TreeNode* root) {
        return getmin(root, 0);
    }
};
