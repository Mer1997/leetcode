/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
const static auto io_sync_off = [](){ std::ios::sync_with_stdio(false); std::cin.tie(nullptr); std::cout.tie(nullptr); return nullptr;}();
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(head == nullptr || head->next == nullptr) return head;
        ListNode *tail = head;
        ListNode *pre = head->next;
        while(pre != nullptr){
            if(pre->val == tail->val){
                tail->next = pre->next;
                pre = tail->next;
            }else{
                pre=pre->next;
                tail=tail->next;
            }
        }
        return head;
    }
};
