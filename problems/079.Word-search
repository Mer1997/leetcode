class Solution {
public:
    bool exist(vector<vector<char>>& board, string word) {
        vector<vector<bool>> isvisted(board.size(), vector<bool>(board[0].size(), false));
        for(int  i = 0; i != (int )board.size(); i++){
            for(int  j = 0; j!= (int )board[0].size(); j++){
                if(_exist(board, word, isvisted, i, j, 0)) return true;
                else isvisted[i][j] = false;
            }
        }
        return false;
    }
    private:
    bool _exist(vector<vector<char>>& board, string word, vector<vector<bool>> &isvisted, int i, int j, int count){
        isvisted[i][j] = true;
        if(board[i][j] != word[count]) return false;
        if(count  == (int )word.size() - 1) return true;
        /*body*/
        if(i - 1 >= 0 && isvisted[i-1][j] == false){
            isvisted[i - 1][j] = true;
            if(_exist(board, word, isvisted, i - 1, j, count+1)) return true;
            else isvisted[i -1][j] = false;
        }
        if(j - 1 >= 0 && isvisted[i][j - 1] == false){
            isvisted[i][j - 1] = true;
            if(_exist(board, word, isvisted, i, j - 1, count+1)) return true;
            else isvisted[i][j - 1] = false;
        }
        if(i + 1 < (int )board.size() && isvisted[i + 1][j] == false){
            isvisted[i + 1][j] = true;
            if(_exist(board, word, isvisted, i + 1, j, count+1)) return true;
            else isvisted[i + 1][j] = false;
        }
        if(j + 1 < (int )board[0].size() && isvisted[i][j + 1] == false){
            isvisted[i][j + 1] = true;
            if(_exist(board, word, isvisted, i, j + 1, count+1)) return true;
            else isvisted[i][j + 1] = false;
        }

        return false;

    }

};
