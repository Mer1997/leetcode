class Solution {
public:
    int uniquePaths(int m, int n) {
        unordered_map<int,int> mymap;
        vector<vector<int>> vec(m,vector<int>(n,0));
        int count = 0;
        count = _find(vec, 0, 0, m, n, mymap);
        return count;
    }
    int _find(vector<vector<int>> &vec, int x, int y, const int m, const int n,unordered_map<int,int> &mymap){
        if(x == m || y == n) return 0;
        else if(x == m - 1 && y == n - 1) return 1;
        if(mymap[x * 100 + y]) return mymap[x * 100 + y];
        else if(vec[x][y] == 1) return 0;
        else{
            int count = 0;
            vec[x][y] = 1;
            count += _find(vec, x + 1, y, m, n, mymap);
            count += _find(vec, x, y + 1, m, n, mymap);
            vec[x][y] = 0;
            mymap[x*100 + y] += count;
            return count;
        }
    }
};
