const static auto io_sync_off = [](){std::ios::sync_with_stdio(false); std::cin.tie(nullptr); std::cout.tie(nullptr); return nullptr;}();
class Solution {
public:
    int dp(const vector<vector<int>> grid, vector<vector<int>> &record, const int row, const int col){
        if(row == grid.size() || col == grid[row].size()) return 0;
        if(grid[row][col] == 1) return 0;
        if(row == grid.size()-1 && col == grid[row].size()-1) return 1;
        if(record[row][col] != -1) return record[row][col];
        else{
            int t = dp(grid, record, row+1, col);
            t += dp(grid, record, row, col+1);
            record[row][col] = t;
            return t;
        }
    }
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        int row = obstacleGrid.size();
        if (row == 0) return 0;
        int col = obstacleGrid[0].size();
        vector<vector<int>> record(row, vector<int>(col, -1));
        int res = dp(obstacleGrid, record, 0, 0);
        return res;
    }
};
