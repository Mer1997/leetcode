

class Solution {
public:
    
    vector< vector<int>> rcd;
  
    int minDistance(string word1, string word2) {
        rcd = vector<vector<int>>(word1.length()+1, vector<int>(word2.length()+1, 0));
        return minDistance_(word1, word2);
    }
    
    int minDistance_(string word1, string word2) {
        if(word1.length() == 0) return word2.length();
        if(word2.length() == 0) return word1.length();
        
        int len1 = word1.length();
        int len2 = word2.length();
        
        if(rcd[len1][len2] != 0) return rcd[len1][len2];
        
        if(word1[len1-1] == word2[len2-1]){
            int m = minDistance_(word1.substr(0,len1-1), word2.substr(0, len2-1));
            rcd[len1][len2] = m;
            return m;
        }
        
        int m1 = minDistance_(word1.substr(0,len1-1), word2.substr(0, len2-1))+1;
        int m2 = minDistance_(word1.substr(0,len1  ), word2.substr(0, len2-1))+1;
        int m3 = minDistance_(word1.substr(0,len1-1), word2.substr(0, len2  ))+1;
        
        if(m1 < m2){
            rcd[len1][len2] = min(m1, m3);
        } 
        else{
            rcd[len1][len2] = min(m2, m3);
        }
        
        return rcd[len1][len2];
    }
};
